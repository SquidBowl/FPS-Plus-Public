import flixel.math.FlxAngle;
import flixel.FlxG;
import flixel.FlxSprite;
import flixel.math.FlxPoint;
import flixel.FlxObject;
import shaders.DropShadowShader;

class TankErect extends BaseStage
{

	var sniper:FlxSprite;
	var guy:FlxSprite;

	var bfShader:DropShadowShader;
	var dadShader:DropShadowShader;
	var gfShader:DropShadowShader;

	var sniperSipping:Bool = true;

	public function new(){
		super();
		
		name = "tankErect";
		startingZoom = 0.7;

		var bg = new FlxSprite(-985, -805).loadGraphic(Paths.image("week7/stage/erect/bg"));
		bg.antialiasing = true;
		bg.scale.set(1.15, 1.15);
		bg.updateHitbox();
		addToBackground(bg);

		sniper = new FlxSprite(-127, 349);
		sniper.frames = Paths.getSparrowAtlas("week7/stage/erect/sniper");
		sniper.antialiasing = true;
		sniper.scale.set(1.15, 1.15);
		sniper.updateHitbox();
		sniper.animation.addByPrefix("idle", "Tankmanidlebaked instance 1", 24, false);
		sniper.animation.addByPrefix("sip", "tanksippingBaked instance 1", 24, false);
		sniper.animation.play("idle");
		addToBackground(sniper);

		guy = new FlxSprite(1398, 407);
		guy.frames = Paths.getSparrowAtlas("week7/stage/erect/guy");
		guy.antialiasing = true;
		guy.scale.set(1.15, 1.15);
		guy.updateHitbox();
		guy.animation.addByPrefix("idle", "BLTank2 instance 1", 24, false);
		guy.animation.play("idle");
		addToBackground(guy);

		dadStart.set(140, 900);
		bfStart.set(1340.5, 885);
		gfStart.set(800.5, 775);

		/*if(gf.curCharacter == "pico-speaker" && PlayState.SONG.song.toLowerCase() == "stress"){
			TankmenBG.loadMappedAnims("picospeaker", "stress");

			var tempTankman:TankmenBG = new TankmenBG(20, 500, true);
			tempTankman.strumTime = 10;
			tempTankman.resetShit(20, 900, true);
			tankmanRun.add(tempTankman);

			for (i in 0...TankmenBG.animationNotes.length){
				if (FlxG.random.bool(16)){
					var tankman:TankmenBG = tankmanRun.recycle(TankmenBG);
					// new TankmenBG(500, 200 + FlxG.random.int(50, 100), TankmenBG.animationNotes[i][1] < 2);
					tankman.strumTime = TankmenBG.animationNotes[i][0];
					tankman.resetShit(500, 200 + FlxG.random.int(50, 100), TankmenBG.animationNotes[i][1] < 2);
					tankmanRun.add(tankman);
				}
			}
		}*/

		bfShader = new DropShadowShader();
		bfShader.setAdjustColor(-46, -38, -25, -20);
    	bfShader.color = 0xFFDFEF3C;
		bfShader.angle = 90;
		bfShader.attachedSprite = boyfriend.getSprite();
		boyfriend.applyShader(bfShader);
		boyfriend.onAnimationFrame.add(function(name:String, frame:Int, index:Int){
			bfShader.updateFrameInfo(boyfriend.getSprite().frame);
		});

		dadShader = new DropShadowShader();
		dadShader.setAdjustColor(-46, -38, -25, -20);
    	dadShader.color = 0xFFDFEF3C;
		dadShader.angle = 135;
		dadShader.threshold = 0.3;
		dadShader.attachedSprite = dad.getSprite();
		dad.applyShader(dadShader);
		dad.onAnimationFrame.add(function(name:String, frame:Int, index:Int){
			dadShader.updateFrameInfo(dad.getSprite().frame);
		});

		gfShader = new DropShadowShader();
		gfShader.setAdjustColor(-46, -38, -25, -20);
    	gfShader.color = 0xFFDFEF3C;
		gfShader.angle = 90;
		gfShader.attachedSprite = gf.getSprite();
		gf.applyShader(gfShader);
		gf.onAnimationFrame.add(function(name:String, frame:Int, index:Int){
			gfShader.updateFrameInfo(gf.getSprite().frame);
		});

		switch(gf.curCharacter){
			case "gf-tankmen":
				trace("doing");
				gfShader.loadAltMask(Paths.image("week7/stage/erect/masks/gfTankmen_mask", true));
				gfShader.maskThreshold = 0.4;
				gfShader.useAltMask = true;
		}

	}

	public override function update(elapsed:Float){
		super.update(elapsed);
	}

	public override function beat(curBeat:Int){
		if(curBeat % 2 == 0){
			guy.animation.play("idle", false);
			sniper.animation.play("idle", false);
		}

		if(FlxG.random.bool(2)){
			sniper.animation.play("sip", false, true);
		}
	}

	/*override function gameOverLoop() {
		FlxG.sound.music.volume = 0.2;
		FlxG.sound.play(Paths.sound('week7/jeffGameover/jeffGameover-' + FlxG.random.int(1, 25)), 1, false, null, true, function(){
			if(FlxG.sound.music.playing){
				FlxG.sound.music.fadeIn(2.5, 0.2, 1);
			}
		});
	}*/

}